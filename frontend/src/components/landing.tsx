/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/t2FzPqLEgx2
 */
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { useState } from "react"
import axios from "axios"

const BACKEND_UPLOAD_URL = "http://localhost:3000";

export function Landing() {
  const [repoUrl, setRepoUrl] = useState("");
  const [uploadId, setUploadId] = useState("");
  const [uploading, setUploading] = useState(false);
  const [deployed, setDeployed] = useState(false);

  return (
    <main id="landing" className="flex flex-col md:flex-row items-center justify-center min-h-screen bg-black text-white p-4">
      <div className="md:w-1/2"> {/* Adjusted width to 3/5 (60%) */}
        <Card className="w-full max-w-md bg-black text-white mx-auto"> {/* Centering the Card */}
          <CardHeader>
            <CardTitle className="text-xl">Deploy your GitHub Repository</CardTitle>
            <CardDescription>Enter the URL of your GitHub repository to deploy it</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="github-url" className="text-white">GitHub Repository URL</Label>
                <Input
                  onChange={(e) => {
                    setRepoUrl(e.target.value);
                  }}
                  placeholder="https://github.com/username/repo"
                  className="bg-black text-white"
                />
              </div>
              <Button
                onClick={async () => {
                  setUploading(true);
                  const res = await axios.post(`${BACKEND_UPLOAD_URL}/deploy`, {
                    repoUrl: repoUrl
                  });
                  setUploadId(res.data.id);
                  setUploading(false);
                  const interval = setInterval(async () => {
                    const response = await axios.get(`${BACKEND_UPLOAD_URL}/status?id=${res.data.id}`);

                    if (response.data.status === "deployed") {
                      clearInterval(interval);
                      setDeployed(true);
                    }
                  }, 3000)
                }}
                disabled={uploadId !== "" || uploading}
                className="w-full bg-white text-black hover:bg-black hover:text-white"
                type="submit"
              >
                {uploadId ? `Deploying (${uploadId})` : uploading ? "Uploading..." : "Upload"}
              </Button>
            </div>
          </CardContent>
        </Card>
        {deployed && <Card className="w-full max-w-md mt-8 bg-black text-white mx-auto"> {/* Centering the Card */}
          <CardHeader>
            <CardTitle className="text-xl">Deployment Status</CardTitle>
            <CardDescription>Your website is successfully deployed!</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-2">
              <Label htmlFor="deployed-url" className="text-white">Deployed URL</Label>
              <Input
                id="deployed-url"
                readOnly
                type="url"
                value={`http://${uploadId}.dev.100xdevs.com:3001/index.html`}
                className="bg-black text-white"
              />
            </div>
            <br />
            <Button className="w-full bg-white text-black hover:bg-black hover:text-white">
              <a href={`http://${uploadId}.10kdevs.com/index.html`} target="_blank" rel="noopener noreferrer">
                Visit Website
              </a>
            </Button>
          </CardContent>
        </Card>}
      </div>
      <div className="md:w-1/2 py-16 md:py-0">
        <h1 className="text-shadow-glow text-2xl md:text-5xl font-bold">All it takes is one click</h1>
        <ul className="list-inside text-white text-left mt-8 ">
          <li className="border-l-4 pl-3 my-4">Enter the GitHub Repo Link that you want to deploy.</li>
          <li className="border-l-4 pl-3 my-4">Click Upload.</li>
          <li className="border-l-4 pl-3 my-4">Wait while the magic happens.</li>
          <li className="border-l-4 pl-3 my-4">Click the "Visit Website" button to see your newly deployed website ready for the world to see.</li>
        </ul>
      </div>

    </main>
  )
}
